{
    "sourceFile": "lib/genserver_supervisor/my_supervisor.ex",
    "activeCommit": 0,
    "commits": [
        {
            "activePatchIndex": 3,
            "patches": [
                {
                    "date": 1726225811947,
                    "content": "Index: \n===================================================================\n--- \n+++ \n"
                },
                {
                    "date": 1726225825005,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -19,9 +19,9 @@\n   def init(_args) do\n     Logger.info(\"Starting Supervisor\")\n \n     children = [\n-      {MyGenServer, [name: :counter]}\n+      {Examples.MyGenServer, [name: :counter]}\n     ]\n \n     # Play around with different restart strategies when running multiple GenServers in a\n     # Supervision tree\n"
                },
                {
                    "date": 1726227827262,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -18,11 +18,11 @@\n   @impl true\n   def init(_args) do\n     Logger.info(\"Starting Supervisor\")\n \n-    children = [\n-      {Examples.MyGenServer, [name: :counter]}\n-    ]\n+    # children = [\n+    #   {Examples.MyGenServer, [name: :counter]}\n+    # ]\n \n     # Play around with different restart strategies when running multiple GenServers in a\n     # Supervision tree\n     # children = [\n"
                },
                {
                    "date": 1726227837230,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -22,10 +22,8 @@\n     # children = [\n     #   {Examples.MyGenServer, [name: :counter]}\n     # ]\n \n-    # Play around with different restart strategies when running multiple GenServers in a\n-    # Supervision tree\n     children = [\n       Supervisor.child_spec({MyGenServer, [name: :counter1]}, id: :counter1),\n       Supervisor.child_spec({MyGenServer, [name: :counter2]}, id: :counter2),\n       Supervisor.child_spec({MyGenServer, [name: :counter3]}, id: :counter3)\n"
                }
            ],
            "date": 1726225811947,
            "name": "Commit-0",
            "content": "defmodule Examples.MySupervisor do\n  @moduledoc false\n  use Supervisor\n  require Logger\n\n  #################\n  # The API again #\n  #################\n\n  def start_link(args \\\\ []) do\n    Supervisor.start_link(__MODULE__, args, name: __MODULE__)\n  end\n\n  #####################################\n  # Callback - there is just one here #\n  #####################################\n\n  @impl true\n  def init(_args) do\n    Logger.info(\"Starting Supervisor\")\n\n    children = [\n      {MyGenServer, [name: :counter]}\n    ]\n\n    # Play around with different restart strategies when running multiple GenServers in a\n    # Supervision tree\n    # children = [\n    #   Supervisor.child_spec({MyGenServer, [name: :counter1]}, id: :counter1),\n    #   Supervisor.child_spec({MyGenServer, [name: :counter2]}, id: :counter2),\n    #   Supervisor.child_spec({MyGenServer, [name: :counter3]}, id: :counter3)\n    # ]\n\n    # More Code that needs to be run before building the tree\n\n    Supervisor.init(children, strategy: :one_for_one)\n  end\nend\n"
        }
    ]
}